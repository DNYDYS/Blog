<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.StudyNoteMapper">
  <resultMap id="BaseResultMap" type="com.blog.model.StudyNote">
    <id column="note_id" jdbcType="BIGINT" property="noteId" />
    <result column="note_name" jdbcType="VARCHAR" property="noteName" />
    <result column="note_url" jdbcType="VARCHAR" property="noteUrl" />
    <result column="note_desc" jdbcType="VARCHAR" property="noteDesc" />
    <result column="creater_user" jdbcType="VARCHAR" property="createrUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="creater_time" jdbcType="TIMESTAMP" property="createrTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.model.StudyNote">
    <result column="note_summary" jdbcType="LONGVARCHAR" property="noteSummary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    note_id, note_name, note_url, note_desc, creater_user, update_user, creater_time, 
    update_time, is_deleted
  </sql>
  <sql id="Blob_Column_List">
    note_summary
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.blog.model.StudyNoteExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from study_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.blog.model.StudyNoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from study_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from study_note
    where note_id = #{noteId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from study_note
    where note_id = #{noteId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.model.StudyNoteExample">
    delete from study_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.model.StudyNote">
    insert into study_note (note_id, note_name, note_url, 
      note_desc, creater_user, update_user, 
      creater_time, update_time, is_deleted, 
      note_summary)
    values (#{noteId,jdbcType=BIGINT}, #{noteName,jdbcType=VARCHAR}, #{noteUrl,jdbcType=VARCHAR}, 
      #{noteDesc,jdbcType=VARCHAR}, #{createrUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{createrTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=VARCHAR}, 
      #{noteSummary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.StudyNote">
    insert into study_note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        note_id,
      </if>
      <if test="noteName != null">
        note_name,
      </if>
      <if test="noteUrl != null">
        note_url,
      </if>
      <if test="noteDesc != null">
        note_desc,
      </if>
      <if test="createrUser != null">
        creater_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createrTime != null">
        creater_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="noteSummary != null">
        note_summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="noteName != null">
        #{noteName,jdbcType=VARCHAR},
      </if>
      <if test="noteUrl != null">
        #{noteUrl,jdbcType=VARCHAR},
      </if>
      <if test="noteDesc != null">
        #{noteDesc,jdbcType=VARCHAR},
      </if>
      <if test="createrUser != null">
        #{createrUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null">
        #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="noteSummary != null">
        #{noteSummary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.model.StudyNoteExample" resultType="java.lang.Integer">
    select count(*) from study_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update study_note
    <set>
      <if test="record.noteId != null">
        note_id = #{record.noteId,jdbcType=BIGINT},
      </if>
      <if test="record.noteName != null">
        note_name = #{record.noteName,jdbcType=VARCHAR},
      </if>
      <if test="record.noteUrl != null">
        note_url = #{record.noteUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.noteDesc != null">
        note_desc = #{record.noteDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createrUser != null">
        creater_user = #{record.createrUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createrTime != null">
        creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="record.noteSummary != null">
        note_summary = #{record.noteSummary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update study_note
    set note_id = #{record.noteId,jdbcType=BIGINT},
      note_name = #{record.noteName,jdbcType=VARCHAR},
      note_url = #{record.noteUrl,jdbcType=VARCHAR},
      note_desc = #{record.noteDesc,jdbcType=VARCHAR},
      creater_user = #{record.createrUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      note_summary = #{record.noteSummary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update study_note
    set note_id = #{record.noteId,jdbcType=BIGINT},
      note_name = #{record.noteName,jdbcType=VARCHAR},
      note_url = #{record.noteUrl,jdbcType=VARCHAR},
      note_desc = #{record.noteDesc,jdbcType=VARCHAR},
      creater_user = #{record.createrUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.StudyNote">
    update study_note
    <set>
      <if test="noteName != null">
        note_name = #{noteName,jdbcType=VARCHAR},
      </if>
      <if test="noteUrl != null">
        note_url = #{noteUrl,jdbcType=VARCHAR},
      </if>
      <if test="noteDesc != null">
        note_desc = #{noteDesc,jdbcType=VARCHAR},
      </if>
      <if test="createrUser != null">
        creater_user = #{createrUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null">
        creater_time = #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="noteSummary != null">
        note_summary = #{noteSummary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where note_id = #{noteId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.model.StudyNote">
    update study_note
    set note_name = #{noteName,jdbcType=VARCHAR},
      note_url = #{noteUrl,jdbcType=VARCHAR},
      note_desc = #{noteDesc,jdbcType=VARCHAR},
      creater_user = #{createrUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      creater_time = #{createrTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=VARCHAR},
      note_summary = #{noteSummary,jdbcType=LONGVARCHAR}
    where note_id = #{noteId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.StudyNote">
    update study_note
    set note_name = #{noteName,jdbcType=VARCHAR},
      note_url = #{noteUrl,jdbcType=VARCHAR},
      note_desc = #{noteDesc,jdbcType=VARCHAR},
      creater_user = #{createrUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      creater_time = #{createrTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=VARCHAR}
    where note_id = #{noteId,jdbcType=BIGINT}
  </update>
</mapper>