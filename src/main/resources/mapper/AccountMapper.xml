<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.blog.model.Account">
    <id column="acc_id" jdbcType="BIGINT" property="accId" />
    <result column="acc_name" jdbcType="VARCHAR" property="accName" />
    <result column="acc_pwd" jdbcType="VARCHAR" property="accPwd" />
    <result column="acc_ip" jdbcType="VARCHAR" property="accIp" />
    <result column="acc_login_time" jdbcType="TIMESTAMP" property="accLoginTime" />
    <result column="creater_user" jdbcType="VARCHAR" property="createrUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="creater_time" jdbcType="TIMESTAMP" property="createrTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    acc_id, acc_name, acc_pwd, acc_ip, acc_login_time, creater_user, update_user, creater_time, 
    update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.blog.model.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where acc_id = #{accId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account
    where acc_id = #{accId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.model.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.model.Account">
    insert into account (acc_id, acc_name, acc_pwd, 
      acc_ip, acc_login_time, creater_user, 
      update_user, creater_time, update_time, 
      is_deleted)
    values (#{accId,jdbcType=BIGINT}, #{accName,jdbcType=VARCHAR}, #{accPwd,jdbcType=VARCHAR}, 
      #{accIp,jdbcType=VARCHAR}, #{accLoginTime,jdbcType=TIMESTAMP}, #{createrUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{createrTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accId != null">
        acc_id,
      </if>
      <if test="accName != null">
        acc_name,
      </if>
      <if test="accPwd != null">
        acc_pwd,
      </if>
      <if test="accIp != null">
        acc_ip,
      </if>
      <if test="accLoginTime != null">
        acc_login_time,
      </if>
      <if test="createrUser != null">
        creater_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createrTime != null">
        creater_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accId != null">
        #{accId,jdbcType=BIGINT},
      </if>
      <if test="accName != null">
        #{accName,jdbcType=VARCHAR},
      </if>
      <if test="accPwd != null">
        #{accPwd,jdbcType=VARCHAR},
      </if>
      <if test="accIp != null">
        #{accIp,jdbcType=VARCHAR},
      </if>
      <if test="accLoginTime != null">
        #{accLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrUser != null">
        #{createrUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null">
        #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.model.AccountExample" resultType="java.lang.Integer">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.accId != null">
        acc_id = #{record.accId,jdbcType=BIGINT},
      </if>
      <if test="record.accName != null">
        acc_name = #{record.accName,jdbcType=VARCHAR},
      </if>
      <if test="record.accPwd != null">
        acc_pwd = #{record.accPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.accIp != null">
        acc_ip = #{record.accIp,jdbcType=VARCHAR},
      </if>
      <if test="record.accLoginTime != null">
        acc_login_time = #{record.accLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createrUser != null">
        creater_user = #{record.createrUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createrTime != null">
        creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set acc_id = #{record.accId,jdbcType=BIGINT},
      acc_name = #{record.accName,jdbcType=VARCHAR},
      acc_pwd = #{record.accPwd,jdbcType=VARCHAR},
      acc_ip = #{record.accIp,jdbcType=VARCHAR},
      acc_login_time = #{record.accLoginTime,jdbcType=TIMESTAMP},
      creater_user = #{record.createrUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.Account">
    update account
    <set>
      <if test="accName != null">
        acc_name = #{accName,jdbcType=VARCHAR},
      </if>
      <if test="accPwd != null">
        acc_pwd = #{accPwd,jdbcType=VARCHAR},
      </if>
      <if test="accIp != null">
        acc_ip = #{accIp,jdbcType=VARCHAR},
      </if>
      <if test="accLoginTime != null">
        acc_login_time = #{accLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrUser != null">
        creater_user = #{createrUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null">
        creater_time = #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=VARCHAR},
      </if>
    </set>
    where acc_id = #{accId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.Account">
    update account
    set acc_name = #{accName,jdbcType=VARCHAR},
      acc_pwd = #{accPwd,jdbcType=VARCHAR},
      acc_ip = #{accIp,jdbcType=VARCHAR},
      acc_login_time = #{accLoginTime,jdbcType=TIMESTAMP},
      creater_user = #{createrUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      creater_time = #{createrTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=VARCHAR}
    where acc_id = #{accId,jdbcType=BIGINT}
  </update>
</mapper>