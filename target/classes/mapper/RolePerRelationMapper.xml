<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.RolePerRelationMapper">
  <resultMap id="BaseResultMap" type="com.blog.model.RolePerRelation">
    <id column="rel_id" jdbcType="BIGINT" property="relId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="per_id" jdbcType="BIGINT" property="perId" />
    <result column="creater_user" jdbcType="VARCHAR" property="createrUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="creater_time" jdbcType="TIMESTAMP" property="createrTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rel_id, role_id, per_id, creater_user, update_user, creater_time, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.blog.model.RolePerRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_per_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_per_relation
    where rel_id = #{relId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_per_relation
    where rel_id = #{relId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.model.RolePerRelationExample">
    delete from role_per_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.model.RolePerRelation">
    insert into role_per_relation (rel_id, role_id, per_id, 
      creater_user, update_user, creater_time, 
      update_time, is_deleted)
    values (#{relId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{perId,jdbcType=BIGINT}, 
      #{createrUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{createrTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.RolePerRelation">
    insert into role_per_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relId != null">
        rel_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="perId != null">
        per_id,
      </if>
      <if test="createrUser != null">
        creater_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createrTime != null">
        creater_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relId != null">
        #{relId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="perId != null">
        #{perId,jdbcType=BIGINT},
      </if>
      <if test="createrUser != null">
        #{createrUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null">
        #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.model.RolePerRelationExample" resultType="java.lang.Integer">
    select count(*) from role_per_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role_per_relation
    <set>
      <if test="record.relId != null">
        rel_id = #{record.relId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.perId != null">
        per_id = #{record.perId,jdbcType=BIGINT},
      </if>
      <if test="record.createrUser != null">
        creater_user = #{record.createrUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createrTime != null">
        creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role_per_relation
    set rel_id = #{record.relId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=BIGINT},
      per_id = #{record.perId,jdbcType=BIGINT},
      creater_user = #{record.createrUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.RolePerRelation">
    update role_per_relation
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="perId != null">
        per_id = #{perId,jdbcType=BIGINT},
      </if>
      <if test="createrUser != null">
        creater_user = #{createrUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null">
        creater_time = #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=VARCHAR},
      </if>
    </set>
    where rel_id = #{relId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.RolePerRelation">
    update role_per_relation
    set role_id = #{roleId,jdbcType=BIGINT},
      per_id = #{perId,jdbcType=BIGINT},
      creater_user = #{createrUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      creater_time = #{createrTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=VARCHAR}
    where rel_id = #{relId,jdbcType=BIGINT}
  </update>
</mapper>